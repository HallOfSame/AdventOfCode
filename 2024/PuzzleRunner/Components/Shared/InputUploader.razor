@using InputStorageDatabase
<MudDialog Style="min-width: 600px;">
    <TitleContent>
        Load Input
    </TitleContent>
    <DialogContent>
        <MudGrid>
            <MudItem xs="12">
                <MudPaper Class="pa-4">
                    <MudForm @ref="form" @bind-IsValid="@isValid" SuppressImplicitSubmission>
                        <MudTextField T="string" Label="Name" Required @bind-Value="name"/>
                        <MudTextField T="int?" Label="Year" Required @bind-Value="Year" />
                        <MudTextField T="int?" Label="Day" Required @bind-Value="Day" />
                        <div class="d-flex">
                            <MudRadioGroup T="PuzzleInputType" @bind-Value="inputType">
                                <MudRadio Value="@PuzzleInputType.Example">Example</MudRadio>
                                <MudRadio Value="@PuzzleInputType.Personal">Personal</MudRadio>
                            </MudRadioGroup>
                        </div>
                        <MudTextField T="string" Label="Input" Required @bind-Value="input" Lines="10" AutoGrow />
                    </MudForm>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" Disabled="@(!isValid)" OnClick="SaveInput">Save</MudButton>
    </DialogActions>
</MudDialog>

@inject AdventOfCodeContext DbContext
@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public int? Year { get; set; } = DateTime.Now.Year;

    [Parameter]
    public int? Day { get; set; } = DateTime.Now.Day;

    private MudForm form = null!;
    private bool isValid;

    private string? name;
    private PuzzleInputType inputType = PuzzleInputType.Example;
    private string? input;

    private async Task SaveInput()
    {
        if (!form.IsValid)
        {
            return;
        }

        var newInput = new PuzzleInput
        {
            Name = name!,
            Day = Day!.Value,
            Year = Year!.Value,
            Input = input!,
            InputType = inputType
        };

        await DbContext.PuzzleInputs.AddAsync(newInput);
        await DbContext.SaveChangesAsync();

        await form.ResetAsync();

        MudDialog.Close(DialogResult.Ok(newInput.InputId));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}
